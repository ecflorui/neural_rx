<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{BAF7ADCE-2F61-323F-945D-6708ACCAA821}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 13.0.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\singh\neural_reciever\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="C:\Users\singh\neural_reciever\build\ZERO_CHECK.vcxproj">
      <Project>{4AE8168C-09FB-3ABC-AA18-43B3457B8B6F}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Users\singh\neural_reciever\build\trt_receiver.vcxproj">
      <Project>{2C057BC0-32F7-3307-B0A1-8CDD9826BF53}</Project>
      <Name>trt_receiver</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 13.0.targets" />
  </ImportGroup>
</Project>