<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{2C057BC0-32F7-3307-B0A1-8CDD9826BF53}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>trt_receiver</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 13.0.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\singh\neural_reciever\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">trt_receiver.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">trt_receiver</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\singh\neural_reciever\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">trt_receiver.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">trt_receiver</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\singh\neural_reciever\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">trt_receiver.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">trt_receiver</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\singh\neural_reciever\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">trt_receiver.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">trt_receiver</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ForceConformanceInForLoopScope></ForceConformanceInForLoopScope>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RemoveUnreferencedCodeData></RemoveUnreferencedCodeData>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <TreatWChar_tAsBuiltInType></TreatWChar_tAsBuiltInType>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;CMAKE_INTDIR="Debug";trt_receiver_EXPORTS</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++14 --generate-code=arch=compute_75,code=[compute_75,sm_75] -Xcompiler="/EHsc -Zi -Ob0"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <Optimization>Od</Optimization>
      <Runtime>MDd</Runtime>
      <RuntimeChecks>RTC1</RuntimeChecks>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <TypeInfo>true</TypeInfo>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\lib\x64\cudart_static.lib;nvinfer.lib;nvonnxparser.lib;nvparsers.lib;nvinfer_plugin.lib;cudadevrt.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib;C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib/$(Configuration);C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <DataExecutionPrevention></DataExecutionPrevention>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers></ImageHasSafeExceptionHandlers>
      <ImportLibrary>C:/Users/singh/neural_reciever/build/Debug/trt_receiver.lib</ImportLibrary>
      <LinkErrorReporting></LinkErrorReporting>
      <ProgramDataBaseFile>C:/Users/singh/neural_reciever/build/Debug/trt_receiver.pdb</ProgramDataBaseFile>
      <RandomizedBaseAddress></RandomizedBaseAddress>
      <SubSystem></SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets </AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ForceConformanceInForLoopScope></ForceConformanceInForLoopScope>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RemoveUnreferencedCodeData></RemoveUnreferencedCodeData>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <TreatWChar_tAsBuiltInType></TreatWChar_tAsBuiltInType>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";trt_receiver_EXPORTS</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++14 --generate-code=arch=compute_75,code=[compute_75,sm_75] -Xcompiler="/EHsc -Ob2"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <Optimization>O2</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <TypeInfo>true</TypeInfo>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\lib\x64\cudart_static.lib;nvinfer.lib;nvonnxparser.lib;nvparsers.lib;nvinfer_plugin.lib;cudadevrt.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib;C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib/$(Configuration);C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <DataExecutionPrevention></DataExecutionPrevention>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers></ImageHasSafeExceptionHandlers>
      <ImportLibrary>C:/Users/singh/neural_reciever/build/Release/trt_receiver.lib</ImportLibrary>
      <LinkErrorReporting></LinkErrorReporting>
      <ProgramDataBaseFile>C:/Users/singh/neural_reciever/build/Release/trt_receiver.pdb</ProgramDataBaseFile>
      <RandomizedBaseAddress></RandomizedBaseAddress>
      <SubSystem></SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets </AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ForceConformanceInForLoopScope></ForceConformanceInForLoopScope>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RemoveUnreferencedCodeData></RemoveUnreferencedCodeData>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <TreatWChar_tAsBuiltInType></TreatWChar_tAsBuiltInType>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";trt_receiver_EXPORTS</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++14 --generate-code=arch=compute_75,code=[compute_75,sm_75] -Xcompiler="/EHsc -Ob1"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <Optimization>O1</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <TypeInfo>true</TypeInfo>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\lib\x64\cudart_static.lib;nvinfer.lib;nvonnxparser.lib;nvparsers.lib;nvinfer_plugin.lib;cudadevrt.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib;C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib/$(Configuration);C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <DataExecutionPrevention></DataExecutionPrevention>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers></ImageHasSafeExceptionHandlers>
      <ImportLibrary>C:/Users/singh/neural_reciever/build/MinSizeRel/trt_receiver.lib</ImportLibrary>
      <LinkErrorReporting></LinkErrorReporting>
      <ProgramDataBaseFile>C:/Users/singh/neural_reciever/build/MinSizeRel/trt_receiver.pdb</ProgramDataBaseFile>
      <RandomizedBaseAddress></RandomizedBaseAddress>
      <SubSystem></SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets </AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ForceConformanceInForLoopScope></ForceConformanceInForLoopScope>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RemoveUnreferencedCodeData></RemoveUnreferencedCodeData>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <TreatWChar_tAsBuiltInType></TreatWChar_tAsBuiltInType>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";trt_receiver_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Include>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(Include)</Include>
      <Defines>%(Defines);_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";trt_receiver_EXPORTS</Defines>
      <AdditionalOptions>%(AdditionalOptions) -std=c++14 --generate-code=arch=compute_75,code=[compute_75,sm_75] -Xcompiler="/EHsc -Zi -Ob1"</AdditionalOptions>
      <CodeGeneration></CodeGeneration>
      <CompileOut>$(IntDir)%(Filename).obj</CompileOut>
      <CudaRuntime>Static</CudaRuntime>
      <GPUDebugInfo>false</GPUDebugInfo>
      <Optimization>O2</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <TypeInfo>true</TypeInfo>
      <UseHostInclude>false</UseHostInclude>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Users\singh\TensorRT-10.13.2.6.Windows.win10.cuda-12.9\TensorRT-10.13.2.6\include;C:\Users\singh\neural_reciever\runtime;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\lib\x64\cudart_static.lib;nvinfer.lib;nvonnxparser.lib;nvparsers.lib;nvinfer_plugin.lib;cudadevrt.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib;C:/Users/singh/TensorRT-10.13.2.6.Windows.win10.cuda-12.9/TensorRT-10.13.2.6/lib/$(Configuration);C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v13.0/lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <DataExecutionPrevention></DataExecutionPrevention>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers></ImageHasSafeExceptionHandlers>
      <ImportLibrary>C:/Users/singh/neural_reciever/build/RelWithDebInfo/trt_receiver.lib</ImportLibrary>
      <LinkErrorReporting></LinkErrorReporting>
      <ProgramDataBaseFile>C:/Users/singh/neural_reciever/build/RelWithDebInfo/trt_receiver.pdb</ProgramDataBaseFile>
      <RandomizedBaseAddress></RandomizedBaseAddress>
      <SubSystem></SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-forward-unknown-to-host-compiler -Wno-deprecated-gpu-targets </AdditionalOptions>
      <PerformDeviceLink>false</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="..\runtime\data_processing.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -E make_directory C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj -D generated_cubin_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj.cubin.txt -P C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/trt_receiver_generated_data_processing.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\assert.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memcpy_s.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memory.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_search.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_stdio_config.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_terminate.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstring.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wtime.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\crtdbg.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\ctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\errno.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stddef.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\string.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\time.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cmath;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\concurrencysal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\crtdefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdarg;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstddef;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdint;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdlib;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstring;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\eh.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\exception;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\limits.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\new;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\sal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdarg.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdint.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\use_ansi.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new_debug.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_string.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xkeycheck.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtr1common;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals_core.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\cudacc_ext.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuComplex.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\library_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__preprocessor;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__target_macros;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\target;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_types.h;C:\Users\singh\neural_reciever\runtime\data_processing.h;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.Debug.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\$(Configuration)\trt_receiver_generated_data_processing.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -E make_directory C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj -D generated_cubin_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj.cubin.txt -P C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/trt_receiver_generated_data_processing.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\assert.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memcpy_s.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memory.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_search.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_stdio_config.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_terminate.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstring.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wtime.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\crtdbg.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\ctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\errno.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stddef.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\string.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\time.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cmath;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\concurrencysal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\crtdefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdarg;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstddef;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdint;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdlib;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstring;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\eh.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\exception;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\limits.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\new;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\sal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdarg.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdint.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\use_ansi.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new_debug.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_string.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xkeycheck.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtr1common;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals_core.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\cudacc_ext.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuComplex.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\library_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__preprocessor;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__target_macros;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\target;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_types.h;C:\Users\singh\neural_reciever\runtime\data_processing.h;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.Release.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\$(Configuration)\trt_receiver_generated_data_processing.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -E make_directory C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj -D generated_cubin_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj.cubin.txt -P C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/trt_receiver_generated_data_processing.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\assert.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memcpy_s.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memory.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_search.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_stdio_config.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_terminate.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstring.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wtime.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\crtdbg.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\ctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\errno.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stddef.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\string.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\time.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cmath;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\concurrencysal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\crtdefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdarg;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstddef;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdint;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdlib;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstring;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\eh.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\exception;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\limits.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\new;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\sal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdarg.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdint.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\use_ansi.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new_debug.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_string.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xkeycheck.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtr1common;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals_core.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\cudacc_ext.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuComplex.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\library_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__preprocessor;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__target_macros;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\target;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_types.h;C:\Users\singh\neural_reciever\runtime\data_processing.h;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.MinSizeRel.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\$(Configuration)\trt_receiver_generated_data_processing.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -E make_directory C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj -D generated_cubin_file:STRING=C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/$(Configuration)/trt_receiver_generated_data_processing.cu.obj.cubin.txt -P C:/Users/singh/neural_reciever/build/CMakeFiles/trt_receiver.dir/runtime/trt_receiver_generated_data_processing.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\assert.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memcpy_s.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_memory.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_search.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_stdio_config.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_terminate.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wstring.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\corecrt_wtime.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\crtdbg.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\ctype.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\errno.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\malloc.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\math.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stddef.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdio.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\stdlib.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\string.h;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\time.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cmath;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\concurrencysal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\crtdefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdarg;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstddef;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdint;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstdlib;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\cstring;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\eh.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\exception;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\initializer_list;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\limits.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\new;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\sal.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdarg.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\stdint.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\use_ansi.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_exception.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_new_debug.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime_string.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xkeycheck.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtr1common;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals.h;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\yvals_core.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\builtin_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\channel_descriptor.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\common_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\cudacc_ext.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_double_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\device_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_config.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\host_defines.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\math_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_100_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_70_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_80_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\crt\sm_90_rt.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuComplex.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_device_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_fp16.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\cuda_runtime_api.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_launch_parameters.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\device_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\driver_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\library_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__preprocessor;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\detail\__target_macros;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\nv\target;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_20_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_30_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_32_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_35_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_60_atomic_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\sm_61_intrinsics.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\surface_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_indirect_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\texture_types.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.h;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_functions.hpp;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v13.0\include\vector_types.h;C:\Users\singh\neural_reciever\runtime\data_processing.h;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.RelWithDebInfo.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\$(Configuration)\trt_receiver_generated_data_processing.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\singh\neural_reciever\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/singh/neural_reciever/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Users\singh\cmake-4.1.0-windows-x86_64\bin\cmake.exe -SC:/Users/singh/neural_reciever -BC:/Users/singh/neural_reciever/build --check-stamp-file C:/Users/singh/neural_reciever/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCUDAInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCXXInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeGenericSystem.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeInitializeConfigs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeLanguageInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeRCInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Compiler\NVIDIA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\run_nvcc.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindCUDA\select_compute_arch.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Linker\MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-Initialize.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-MSVC.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows-NVIDIA-CUDA.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\Windows.cmake;C:\Users\singh\cmake-4.1.0-windows-x86_64\share\cmake-4.1\Modules\Platform\WindowsPaths.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCUDACompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeCXXCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeRCCompiler.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\4.1.0\CMakeSystem.cmake;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.cmake.pre-gen;C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\trt_receiver_generated_data_processing.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\singh\neural_reciever\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <Object Include="C:\Users\singh\neural_reciever\build\CMakeFiles\trt_receiver.dir\runtime\$(Configuration)\trt_receiver_generated_data_processing.cu.obj" />
    <ClCompile Include="C:\Users\singh\neural_reciever\runtime\trt_receiver.cpp" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="C:\Users\singh\neural_reciever\build\ZERO_CHECK.vcxproj">
      <Project>{4AE8168C-09FB-3ABC-AA18-43B3457B8B6F}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 13.0.targets" />
  </ImportGroup>
</Project>